--- postgis-1.5.0-r1.ebuild.orig	2009-09-21 00:35:26.000000000 +0200
+++ postgis-1.5.0-r1.ebuild	        2010-01-20 14:45:03.000000000 +0100
@@ -14,7 +14,7 @@
 KEYWORDS="~amd64 ~ppc ~x86"
 IUSE="doc"
 
-RDEPEND=">=virtual/postgresql-server-8.2
+RDEPEND=">=virtual/postgresql-server-8.4
 	>=sci-libs/geos-3
 	>=sci-libs/proj-4.5.0"
 
@@ -23,6 +23,8 @@
 
 RESTRICT="test"
 
+PGVER="8.4"
+
 pkg_setup(){
 	if [ ! -z "${PGUSER}" ]; then
 		eval unset PGUSER
@@ -49,8 +51,8 @@
 	fi
 
 	econf --enable-autoconf \
-		--datadir=/usr/share/postgresql/contrib/ \
-		--libdir=/usr/$(get_libdir)/postgresql/ \
+		--datadir=/usr/share/postgresql-${PGVER}/contrib/ \
+		--libdir=/usr/$(get_libdir)/postgresql-${PGVER}/ \
 		--with-docdir=/usr/share/doc/${PF}/html/ \
 		${myconf} ||\
 			die "Error: econf failed"
@@ -67,7 +69,7 @@
 }
 
 src_install(){
-	dodir /usr/$(get_libdir)/postgresql /usr/share/postgresql/contrib/
+	dodir /usr/$(get_libdir)/postgresql-${PGVER} /usr/share/postgresql-${PGVER}/contrib/
 	emake DESTDIR="${D}" install || die "emake install failed"
 	cd "${S}/topology/"
 	emake DESTDIR="${D}" install || die "emake install topology failed"
@@ -88,9 +90,9 @@
 	doconfd postgis_dbs
 
 	if [ ! -z "${require_soft_upgrade}" ]; then
-		grep "'C'" -B 4 "${D}"usr/share/postgresql/contrib/lwpostgis.sql | \
+		grep "'C'" -B 4 "${D}"usr/share/postgresql-${PGVER}/contrib/postgis.sql | \
 			grep -v "'sql'" > \
-				"${D}"usr/share/postgresql/contrib/load_before_upgrade.sql
+				"${D}"usr/share/postgresql-${PGVER}/contrib/load_before_upgrade.sql
 	fi
 }
 
@@ -104,7 +106,7 @@
 	einfo "Please add your databases names into ${ROOT}conf.d/postgis_dbs"
 	einfo "(templates name have to be prefixed with 'template')."
 	for i in $(cat "${ROOT}etc/conf.d/postgis_dbs"); do
-		source "${ROOT}"etc/conf.d/postgresql
+		source "${ROOT}"etc/conf.d/postgresql-${PGVER}
 		PGDATABASE=${i}
 		eval set PGDATABASE=${i}
 		myuser="${PGUSER:-postgres}"
@@ -134,16 +136,16 @@
 
 	# if there is not a table or a template existing with the same name, create.
 		if [ -z "$(psql -U ${myuser} -l | grep "${mydb}")" ]; then
-			createdb -q -O ${myuser} -U ${myuser} ${mydb} ||\
+			createdb -O ${myuser} -U ${myuser} ${mydb} ||\
 				die "Unable to create the ${mydb} ${mytype} as ${myuser}"
 			createlang -U ${myuser} plpgsql ${mydb}
 			if [ "$?" == 2 ]; then
 				safe_exit "Unable to createlang plpgsql ${mydb}."
 			fi
 			(psql -q -U ${myuser} ${mydb} -f \
-				"${ROOT}"usr/share/postgresql/contrib/lwpostgis.sql &&
+				"${ROOT}"usr/share/postgresql-${PGVER}/contrib/postgis.sql &&
 			psql -q -U ${myuser} ${mydb} -f \
-				"${ROOT}"usr/share/postgresql/contrib/spatial_ref_sys.sql) 2>\
+				"${ROOT}"usr/share/postgresql-${PGVER}/contrib/spatial_ref_sys.sql) 2>\
 					"${logfile}"
 			if [ "$(grep -c ERROR "${logfile}")" \> 0 ]; then
 				safe_exit "Unable to load sql files."
@@ -158,21 +160,21 @@
 				"VACUUM FREEZE;" || die "Unable to set VACUUM FREEZE option"
 			fi
 		else
-			if [ -e "${ROOT}"usr/share/postgresql/contrib/load_before_upgrade.sql ];
+			if [ -e "${ROOT}"usr/share/postgresql-${PGVER}/contrib/load_before_upgrade.sql ];
 			then
 				einfo "Updating the dynamic library references"
 				psql -q -f \
-					"${ROOT}"usr/share/postgresql/contrib/load_before_upgrade.sql\
+					"${ROOT}"usr/share/postgresql-${PGVER}/contrib/load_before_upgrade.sql\
 						2> "${logfile}"
 				if [ "$(grep -c ERROR "${logfile}")" \> 0 ]; then
 					safe_exit "Unable to update references."
 				fi
 			fi
-			if [ -e "${ROOT}"usr/share/postgresql/contrib/lwpostgis_upgrade.sql ];
+			if [ -e "${ROOT}"usr/share/postgresql-${PGVER}/contrib/postgis_upgrade.sql ];
 			then
 				einfo "Running soft upgrade"
 				psql -q -U ${myuser} ${mydb} -f \
-					"${ROOT}"usr/share/postgresql/contrib/lwpostgis_upgrade.sql 2>\
+					"${ROOT}"usr/share/postgresql-${PGVER}/contrib/postgis_upgrade.sql 2>\
 						"${logfile}"
 				if [ "$(grep -c ERROR "${logfile}")" \> 0 ]; then
 					safe_exit "Unable to run soft upgrade."
